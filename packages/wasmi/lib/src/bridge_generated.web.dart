// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.72.2.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';

class WasmiDartPlatform extends FlutterRustBridgeBase<WasmiDartWire>
    with FlutterRustBridgeSetupMixin {
  WasmiDartPlatform(FutureOr<WasmModule> dylib) : super(WasmiDartWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;

// Section: api2wire

  @protected
  String api2wire_String(String raw) {
    return raw;
  }

  @protected
  List<dynamic> api2wire_box_autoadd_wasmi_module_id(WasmiModuleId raw) {
    return api2wire_wasmi_module_id(raw);
  }

  @protected
  Object api2wire_i64(int raw) {
    return castNativeBigInt(raw);
  }

  @protected
  List<dynamic> api2wire_list_value_2(List<Value2> raw) {
    return raw.map(api2wire_value_2).toList();
  }

  @protected
  Uint8List api2wire_uint_8_list(Uint8List raw) {
    return raw;
  }

  @protected
  List<dynamic> api2wire_value_2(Value2 raw) {
    if (raw is Value2_I32) {
      return [0, api2wire_i32(raw.field0)];
    }
    if (raw is Value2_I64) {
      return [1, api2wire_i64(raw.field0)];
    }
    if (raw is Value2_F32) {
      return [2, api2wire_f32(raw.field0)];
    }
    if (raw is Value2_F64) {
      return [3, api2wire_f64(raw.field0)];
    }
    if (raw is Value2_FuncRef) {
      return [4, api2wire_u32(raw.field0)];
    }
    if (raw is Value2_ExternRef) {
      return [5, api2wire_u32(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> api2wire_wasmi_module_id(WasmiModuleId raw) {
    return [api2wire_usize(raw.field0)];
  }
// Section: finalizer
}

// Section: WASM wire module

@JS('wasm_bindgen')
external WasmiDartWasmModule get wasmModule;

@JS()
@anonymous
class WasmiDartWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external WasmiDartWasmModule bind(dynamic thisArg, String moduleName);
  external dynamic /* void */ wire_parse_wat_format(
      NativePortType port_, String wat);

  external dynamic /* List<dynamic> */ wire_run_function(Object pointer);

  external dynamic /* List<dynamic> */ wire_run_wasm_func(
      int pointer, List<dynamic> params);

  external dynamic /* bool */ wire_run_wasm_func_void(
      int pointer, List<dynamic> params);

  external dynamic /* void */ wire_compile_wasm(
      NativePortType port_, Uint8List module_wasm);

  external dynamic /* void */ wire_call_wasm(NativePortType port_);

  external dynamic /* void */ wire_add(
      NativePortType port_, Object a, Object b);

  external dynamic /* void */ wire_call_function__method__WasmiModuleId(
      NativePortType port_, List<dynamic> that, String name);

  external dynamic /* void */
      wire_call_function_with_args__method__WasmiModuleId(NativePortType port_,
          List<dynamic> that, String name, List<dynamic> args);

  external dynamic /* void */ wire_get_exports__method__WasmiModuleId(
      NativePortType port_, List<dynamic> that);

  external dynamic /* void */ wire_get_module_exports__method__WasmiModuleId(
      NativePortType port_, List<dynamic> that);

  external dynamic /* void */ wire_executions__method__WasmiModuleId(
      NativePortType port_, List<dynamic> that);

  external dynamic /* List<dynamic> */
      wire_call_function_with_args_sync__method__WasmiModuleId(
          List<dynamic> that, String name, List<dynamic> args);
}

// Section: WASM wire connector

class WasmiDartWire extends FlutterRustBridgeWasmWireBase<WasmiDartWasmModule> {
  WasmiDartWire(FutureOr<WasmModule> module)
      : super(WasmModule.cast<WasmiDartWasmModule>(module));

  void wire_parse_wat_format(NativePortType port_, String wat) =>
      wasmModule.wire_parse_wat_format(port_, wat);

  dynamic /* List<dynamic> */ wire_run_function(Object pointer) =>
      wasmModule.wire_run_function(pointer);

  dynamic /* List<dynamic> */ wire_run_wasm_func(
          int pointer, List<dynamic> params) =>
      wasmModule.wire_run_wasm_func(pointer, params);

  dynamic /* bool */ wire_run_wasm_func_void(
          int pointer, List<dynamic> params) =>
      wasmModule.wire_run_wasm_func_void(pointer, params);

  void wire_compile_wasm(NativePortType port_, Uint8List module_wasm) =>
      wasmModule.wire_compile_wasm(port_, module_wasm);

  void wire_call_wasm(NativePortType port_) => wasmModule.wire_call_wasm(port_);

  void wire_add(NativePortType port_, Object a, Object b) =>
      wasmModule.wire_add(port_, a, b);

  void wire_call_function__method__WasmiModuleId(
          NativePortType port_, List<dynamic> that, String name) =>
      wasmModule.wire_call_function__method__WasmiModuleId(port_, that, name);

  void wire_call_function_with_args__method__WasmiModuleId(NativePortType port_,
          List<dynamic> that, String name, List<dynamic> args) =>
      wasmModule.wire_call_function_with_args__method__WasmiModuleId(
          port_, that, name, args);

  void wire_get_exports__method__WasmiModuleId(
          NativePortType port_, List<dynamic> that) =>
      wasmModule.wire_get_exports__method__WasmiModuleId(port_, that);

  void wire_get_module_exports__method__WasmiModuleId(
          NativePortType port_, List<dynamic> that) =>
      wasmModule.wire_get_module_exports__method__WasmiModuleId(port_, that);

  void wire_executions__method__WasmiModuleId(
          NativePortType port_, List<dynamic> that) =>
      wasmModule.wire_executions__method__WasmiModuleId(port_, that);

  dynamic /* List<dynamic> */
      wire_call_function_with_args_sync__method__WasmiModuleId(
              List<dynamic> that, String name, List<dynamic> args) =>
          wasmModule.wire_call_function_with_args_sync__method__WasmiModuleId(
              that, name, args);
}
