// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.72.2.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';
import 'dart:ffi' as ffi;

class WasmiDartPlatform extends FlutterRustBridgeBase<WasmiDartWire> {
  WasmiDartPlatform(ffi.DynamicLibrary dylib) : super(WasmiDartWire(dylib));

// Section: api2wire

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_String(String raw) {
    return api2wire_uint_8_list(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_WasmiModuleId> api2wire_box_autoadd_wasmi_module_id(
      WasmiModuleId raw) {
    final ptr = inner.new_box_autoadd_wasmi_module_id_0();
    _api_fill_to_wire_wasmi_module_id(raw, ptr.ref);
    return ptr;
  }

  @protected
  int api2wire_i64(int raw) {
    return raw;
  }

  @protected
  ffi.Pointer<wire_list_value_2> api2wire_list_value_2(List<Value2> raw) {
    final ans = inner.new_list_value_2_0(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      _api_fill_to_wire_value_2(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_uint_8_list(Uint8List raw) {
    final ans = inner.new_uint_8_list_0(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

// Section: finalizer

// Section: api_fill_to_wire

  void _api_fill_to_wire_box_autoadd_wasmi_module_id(
      WasmiModuleId apiObj, ffi.Pointer<wire_WasmiModuleId> wireObj) {
    _api_fill_to_wire_wasmi_module_id(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_value_2(Value2 apiObj, wire_Value2 wireObj) {
    if (apiObj is Value2_I32) {
      var pre_field0 = api2wire_i32(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind = inner.inflate_Value2_I32();
      wireObj.kind.ref.I32.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is Value2_I64) {
      var pre_field0 = api2wire_i64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind = inner.inflate_Value2_I64();
      wireObj.kind.ref.I64.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is Value2_F32) {
      var pre_field0 = api2wire_f32(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind = inner.inflate_Value2_F32();
      wireObj.kind.ref.F32.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is Value2_F64) {
      var pre_field0 = api2wire_f64(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind = inner.inflate_Value2_F64();
      wireObj.kind.ref.F64.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is Value2_FuncRef) {
      var pre_field0 = api2wire_u32(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind = inner.inflate_Value2_FuncRef();
      wireObj.kind.ref.FuncRef.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is Value2_ExternRef) {
      var pre_field0 = api2wire_u32(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind = inner.inflate_Value2_ExternRef();
      wireObj.kind.ref.ExternRef.ref.field0 = pre_field0;
      return;
    }
  }

  void _api_fill_to_wire_wasmi_module_id(
      WasmiModuleId apiObj, wire_WasmiModuleId wireObj) {
    wireObj.field0 = api2wire_usize(apiObj.field0);
  }
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class WasmiDartWire implements FlutterRustBridgeWireBase {
  @internal
  late final dartApi = DartApiDl(init_frb_dart_api_dl);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  WasmiDartWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  WasmiDartWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>(
          'store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr
      .asFunction<void Function(DartPostCObjectFnType)>();

  Object get_dart_object(
    int ptr,
  ) {
    return _get_dart_object(
      ptr,
    );
  }

  late final _get_dart_objectPtr =
      _lookup<ffi.NativeFunction<ffi.Handle Function(ffi.UintPtr)>>(
          'get_dart_object');
  late final _get_dart_object =
      _get_dart_objectPtr.asFunction<Object Function(int)>();

  void drop_dart_object(
    int ptr,
  ) {
    return _drop_dart_object(
      ptr,
    );
  }

  late final _drop_dart_objectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.UintPtr)>>(
          'drop_dart_object');
  late final _drop_dart_object =
      _drop_dart_objectPtr.asFunction<void Function(int)>();

  int new_dart_opaque(
    Object handle,
  ) {
    return _new_dart_opaque(
      handle,
    );
  }

  late final _new_dart_opaquePtr =
      _lookup<ffi.NativeFunction<ffi.UintPtr Function(ffi.Handle)>>(
          'new_dart_opaque');
  late final _new_dart_opaque =
      _new_dart_opaquePtr.asFunction<int Function(Object)>();

  int init_frb_dart_api_dl(
    ffi.Pointer<ffi.Void> obj,
  ) {
    return _init_frb_dart_api_dl(
      obj,
    );
  }

  late final _init_frb_dart_api_dlPtr =
      _lookup<ffi.NativeFunction<ffi.IntPtr Function(ffi.Pointer<ffi.Void>)>>(
          'init_frb_dart_api_dl');
  late final _init_frb_dart_api_dl = _init_frb_dart_api_dlPtr
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  void wire_parse_wat_format(
    int port_,
    ffi.Pointer<wire_uint_8_list> wat,
  ) {
    return _wire_parse_wat_format(
      port_,
      wat,
    );
  }

  late final _wire_parse_wat_formatPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_parse_wat_format');
  late final _wire_parse_wat_format = _wire_parse_wat_formatPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  WireSyncReturn wire_run_function(
    int pointer,
  ) {
    return _wire_run_function(
      pointer,
    );
  }

  late final _wire_run_functionPtr =
      _lookup<ffi.NativeFunction<WireSyncReturn Function(ffi.Int64)>>(
          'wire_run_function');
  late final _wire_run_function =
      _wire_run_functionPtr.asFunction<WireSyncReturn Function(int)>();

  WireSyncReturn wire_run_wasm_func(
    int pointer,
    ffi.Pointer<wire_list_value_2> params,
  ) {
    return _wire_run_wasm_func(
      pointer,
      params,
    );
  }

  late final _wire_run_wasm_funcPtr = _lookup<
      ffi.NativeFunction<
          WireSyncReturn Function(ffi.UintPtr,
              ffi.Pointer<wire_list_value_2>)>>('wire_run_wasm_func');
  late final _wire_run_wasm_func = _wire_run_wasm_funcPtr.asFunction<
      WireSyncReturn Function(int, ffi.Pointer<wire_list_value_2>)>();

  WireSyncReturn wire_run_wasm_func_void(
    int pointer,
    ffi.Pointer<wire_list_value_2> params,
  ) {
    return _wire_run_wasm_func_void(
      pointer,
      params,
    );
  }

  late final _wire_run_wasm_func_voidPtr = _lookup<
      ffi.NativeFunction<
          WireSyncReturn Function(ffi.UintPtr,
              ffi.Pointer<wire_list_value_2>)>>('wire_run_wasm_func_void');
  late final _wire_run_wasm_func_void = _wire_run_wasm_func_voidPtr.asFunction<
      WireSyncReturn Function(int, ffi.Pointer<wire_list_value_2>)>();

  void wire_compile_wasm(
    int port_,
    ffi.Pointer<wire_uint_8_list> module_wasm,
  ) {
    return _wire_compile_wasm(
      port_,
      module_wasm,
    );
  }

  late final _wire_compile_wasmPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>('wire_compile_wasm');
  late final _wire_compile_wasm = _wire_compile_wasmPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_call_wasm(
    int port_,
  ) {
    return _wire_call_wasm(
      port_,
    );
  }

  late final _wire_call_wasmPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_call_wasm');
  late final _wire_call_wasm =
      _wire_call_wasmPtr.asFunction<void Function(int)>();

  void wire_add(
    int port_,
    int a,
    int b,
  ) {
    return _wire_add(
      port_,
      a,
      b,
    );
  }

  late final _wire_addPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Int64, ffi.Int64)>>('wire_add');
  late final _wire_add =
      _wire_addPtr.asFunction<void Function(int, int, int)>();

  void wire_call_function__method__WasmiModuleId(
    int port_,
    ffi.Pointer<wire_WasmiModuleId> that,
    ffi.Pointer<wire_uint_8_list> name,
  ) {
    return _wire_call_function__method__WasmiModuleId(
      port_,
      that,
      name,
    );
  }

  late final _wire_call_function__method__WasmiModuleIdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_WasmiModuleId>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_call_function__method__WasmiModuleId');
  late final _wire_call_function__method__WasmiModuleId =
      _wire_call_function__method__WasmiModuleIdPtr.asFunction<
          void Function(int, ffi.Pointer<wire_WasmiModuleId>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_call_function_with_args__method__WasmiModuleId(
    int port_,
    ffi.Pointer<wire_WasmiModuleId> that,
    ffi.Pointer<wire_uint_8_list> name,
    ffi.Pointer<wire_list_value_2> args,
  ) {
    return _wire_call_function_with_args__method__WasmiModuleId(
      port_,
      that,
      name,
      args,
    );
  }

  late final _wire_call_function_with_args__method__WasmiModuleIdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_WasmiModuleId>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_list_value_2>)>>(
      'wire_call_function_with_args__method__WasmiModuleId');
  late final _wire_call_function_with_args__method__WasmiModuleId =
      _wire_call_function_with_args__method__WasmiModuleIdPtr.asFunction<
          void Function(int, ffi.Pointer<wire_WasmiModuleId>,
              ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_list_value_2>)>();

  void wire_get_exports__method__WasmiModuleId(
    int port_,
    ffi.Pointer<wire_WasmiModuleId> that,
  ) {
    return _wire_get_exports__method__WasmiModuleId(
      port_,
      that,
    );
  }

  late final _wire_get_exports__method__WasmiModuleIdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_WasmiModuleId>)>>(
      'wire_get_exports__method__WasmiModuleId');
  late final _wire_get_exports__method__WasmiModuleId =
      _wire_get_exports__method__WasmiModuleIdPtr
          .asFunction<void Function(int, ffi.Pointer<wire_WasmiModuleId>)>();

  void wire_get_module_exports__method__WasmiModuleId(
    int port_,
    ffi.Pointer<wire_WasmiModuleId> that,
  ) {
    return _wire_get_module_exports__method__WasmiModuleId(
      port_,
      that,
    );
  }

  late final _wire_get_module_exports__method__WasmiModuleIdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_WasmiModuleId>)>>(
      'wire_get_module_exports__method__WasmiModuleId');
  late final _wire_get_module_exports__method__WasmiModuleId =
      _wire_get_module_exports__method__WasmiModuleIdPtr
          .asFunction<void Function(int, ffi.Pointer<wire_WasmiModuleId>)>();

  void wire_executions__method__WasmiModuleId(
    int port_,
    ffi.Pointer<wire_WasmiModuleId> that,
  ) {
    return _wire_executions__method__WasmiModuleId(
      port_,
      that,
    );
  }

  late final _wire_executions__method__WasmiModuleIdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_WasmiModuleId>)>>(
      'wire_executions__method__WasmiModuleId');
  late final _wire_executions__method__WasmiModuleId =
      _wire_executions__method__WasmiModuleIdPtr
          .asFunction<void Function(int, ffi.Pointer<wire_WasmiModuleId>)>();

  WireSyncReturn wire_call_function_with_args_sync__method__WasmiModuleId(
    ffi.Pointer<wire_WasmiModuleId> that,
    ffi.Pointer<wire_uint_8_list> name,
    ffi.Pointer<wire_list_value_2> args,
  ) {
    return _wire_call_function_with_args_sync__method__WasmiModuleId(
      that,
      name,
      args,
    );
  }

  late final _wire_call_function_with_args_sync__method__WasmiModuleIdPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncReturn Function(
                      ffi.Pointer<wire_WasmiModuleId>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_list_value_2>)>>(
          'wire_call_function_with_args_sync__method__WasmiModuleId');
  late final _wire_call_function_with_args_sync__method__WasmiModuleId =
      _wire_call_function_with_args_sync__method__WasmiModuleIdPtr.asFunction<
          WireSyncReturn Function(ffi.Pointer<wire_WasmiModuleId>,
              ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_list_value_2>)>();

  ffi.Pointer<wire_WasmiModuleId> new_box_autoadd_wasmi_module_id_0() {
    return _new_box_autoadd_wasmi_module_id_0();
  }

  late final _new_box_autoadd_wasmi_module_id_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_WasmiModuleId> Function()>>(
          'new_box_autoadd_wasmi_module_id_0');
  late final _new_box_autoadd_wasmi_module_id_0 =
      _new_box_autoadd_wasmi_module_id_0Ptr
          .asFunction<ffi.Pointer<wire_WasmiModuleId> Function()>();

  ffi.Pointer<wire_list_value_2> new_list_value_2_0(
    int len,
  ) {
    return _new_list_value_2_0(
      len,
    );
  }

  late final _new_list_value_2_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_list_value_2> Function(
              ffi.Int32)>>('new_list_value_2_0');
  late final _new_list_value_2_0 = _new_list_value_2_0Ptr
      .asFunction<ffi.Pointer<wire_list_value_2> Function(int)>();

  ffi.Pointer<wire_uint_8_list> new_uint_8_list_0(
    int len,
  ) {
    return _new_uint_8_list_0(
      len,
    );
  }

  late final _new_uint_8_list_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_uint_8_list> Function(
              ffi.Int32)>>('new_uint_8_list_0');
  late final _new_uint_8_list_0 = _new_uint_8_list_0Ptr
      .asFunction<ffi.Pointer<wire_uint_8_list> Function(int)>();

  ffi.Pointer<Value2Kind> inflate_Value2_I32() {
    return _inflate_Value2_I32();
  }

  late final _inflate_Value2_I32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<Value2Kind> Function()>>(
          'inflate_Value2_I32');
  late final _inflate_Value2_I32 =
      _inflate_Value2_I32Ptr.asFunction<ffi.Pointer<Value2Kind> Function()>();

  ffi.Pointer<Value2Kind> inflate_Value2_I64() {
    return _inflate_Value2_I64();
  }

  late final _inflate_Value2_I64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<Value2Kind> Function()>>(
          'inflate_Value2_I64');
  late final _inflate_Value2_I64 =
      _inflate_Value2_I64Ptr.asFunction<ffi.Pointer<Value2Kind> Function()>();

  ffi.Pointer<Value2Kind> inflate_Value2_F32() {
    return _inflate_Value2_F32();
  }

  late final _inflate_Value2_F32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<Value2Kind> Function()>>(
          'inflate_Value2_F32');
  late final _inflate_Value2_F32 =
      _inflate_Value2_F32Ptr.asFunction<ffi.Pointer<Value2Kind> Function()>();

  ffi.Pointer<Value2Kind> inflate_Value2_F64() {
    return _inflate_Value2_F64();
  }

  late final _inflate_Value2_F64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<Value2Kind> Function()>>(
          'inflate_Value2_F64');
  late final _inflate_Value2_F64 =
      _inflate_Value2_F64Ptr.asFunction<ffi.Pointer<Value2Kind> Function()>();

  ffi.Pointer<Value2Kind> inflate_Value2_FuncRef() {
    return _inflate_Value2_FuncRef();
  }

  late final _inflate_Value2_FuncRefPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<Value2Kind> Function()>>(
          'inflate_Value2_FuncRef');
  late final _inflate_Value2_FuncRef = _inflate_Value2_FuncRefPtr
      .asFunction<ffi.Pointer<Value2Kind> Function()>();

  ffi.Pointer<Value2Kind> inflate_Value2_ExternRef() {
    return _inflate_Value2_ExternRef();
  }

  late final _inflate_Value2_ExternRefPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<Value2Kind> Function()>>(
          'inflate_Value2_ExternRef');
  late final _inflate_Value2_ExternRef = _inflate_Value2_ExternRefPtr
      .asFunction<ffi.Pointer<Value2Kind> Function()>();

  void free_WireSyncReturn(
    WireSyncReturn ptr,
  ) {
    return _free_WireSyncReturn(
      ptr,
    );
  }

  late final _free_WireSyncReturnPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturn)>>(
          'free_WireSyncReturn');
  late final _free_WireSyncReturn =
      _free_WireSyncReturnPtr.asFunction<void Function(WireSyncReturn)>();
}

class _Dart_Handle extends ffi.Opaque {}

class wire_uint_8_list extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

class wire_Value2_I32 extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

class wire_Value2_I64 extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

class wire_Value2_F32 extends ffi.Struct {
  @ffi.Float()
  external double field0;
}

class wire_Value2_F64 extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

class wire_Value2_FuncRef extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

class wire_Value2_ExternRef extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

class Value2Kind extends ffi.Union {
  external ffi.Pointer<wire_Value2_I32> I32;

  external ffi.Pointer<wire_Value2_I64> I64;

  external ffi.Pointer<wire_Value2_F32> F32;

  external ffi.Pointer<wire_Value2_F64> F64;

  external ffi.Pointer<wire_Value2_FuncRef> FuncRef;

  external ffi.Pointer<wire_Value2_ExternRef> ExternRef;
}

class wire_Value2 extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ffi.Pointer<Value2Kind> kind;
}

class wire_list_value_2 extends ffi.Struct {
  external ffi.Pointer<wire_Value2> ptr;

  @ffi.Int32()
  external int len;
}

class wire_WasmiModuleId extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

typedef DartPostCObjectFnType = ffi.Pointer<
    ffi.NativeFunction<
        ffi.Bool Function(DartPort port_id, ffi.Pointer<ffi.Void> message)>>;
typedef DartPort = ffi.Int64;
